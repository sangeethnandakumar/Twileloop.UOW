# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Step 1: Clone the 'tactile' theme repository
      - name: Clone Tactile Theme
        run: git clone https://github.com/pages-themes/tactile.git ./tactile-theme

      # Step 2: Create necessary directories in the 'docs' folder
      - name: Create Directories
        run: |
          mkdir -p docs/_layouts
          mkdir -p docs/_includes
          mkdir -p docs/_sass

      # Step 3: Copy theme files to the 'docs' folder
      - name: Copy Theme Files
        run: |
          cp -r ./tactile-theme/_layouts/* docs/_layouts/
          cp -r ./tactile-theme/_includes/* docs/_includes/
          cp -r ./tactile-theme/_sass/* docs/_sass/
          cp ./tactile-theme/Gemfile ./docs/

      # Step 4: List files in the 'docs' folder for verification
      - name: List Files in Docs Folder
        run: ls -R docs/

      # Step 5: Build the site with Jekyll
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./docs
          destination: ./_site

      # Step 6: Upload the built site as an artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
